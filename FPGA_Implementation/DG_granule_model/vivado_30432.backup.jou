#-----------------------------------------------------------
# Vivado v2021.2 (64-bit)
# SW Build 3367213 on Tue Oct 19 02:48:09 MDT 2021
# IP Build 3369179 on Thu Oct 21 08:25:16 MDT 2021
# Start of session at: Wed Oct  4 14:27:33 2023
# Process ID: 30432
# Current directory: D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model
# Command line: vivado.exe -gui_launcher_event rodinguilauncherevent19980 D:\ADAM_LAB\IZ_Neuron_FPGA\FPGA_Implementation\DG_granule_model\DG_granule_model.xpr
# Log file: D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/vivado.log
# Journal file: D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model\vivado.jou
# Running On: LAPTOP-U9EM5UJ6, OS: Windows, CPU Frequency: 2304 MHz, CPU Physical cores: 8, Host memory: 17007 MB
#-----------------------------------------------------------
start_gui
open_project D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.xpr
update_compile_order -fileset sources_1
reset_run synth_1
launch_runs impl_1 -jobs 16
wait_on_run impl_1
reset_run synth_1
launch_runs synth_1 -jobs 16
wait_on_run synth_1
reset_run synth_1
launch_runs impl_1 -jobs 16
wait_on_run impl_1
export_ip_user_files -of_objects  [get_files D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/utils_1/imports/synth_1/DG_granule_model.dcp] -no_script -reset -force -quiet
remove_files  -fileset utils_1 D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/utils_1/imports/synth_1/DG_granule_model.dcp
file delete -force D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/utils_1/imports/synth_1/DG_granule_model.dcp
reset_run synth_1
launch_runs synth_1 -jobs 16
wait_on_run synth_1
launch_runs impl_1 -jobs 16
wait_on_run impl_1
set_property -dict [list CONFIG.C_Mult_Usage {No_Usage} CONFIG.C_Latency {12}] [get_ips double_add]
generate_target all [get_files  D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/double_add/double_add.xci]
catch { config_ip_cache -export [get_ips -all double_add] }
export_ip_user_files -of_objects [get_files D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/double_add/double_add.xci] -no_script -sync -force -quiet
reset_run double_add_synth_1
launch_runs double_add_synth_1 -jobs 16
wait_on_run double_add_synth_1
wait_on_run double_add_synth_1
export_simulation -of_objects [get_files D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/double_add/double_add.xci] -directory D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.ip_user_files/sim_scripts -ip_user_files_dir D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.ip_user_files -ipstatic_source_dir D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.ip_user_files/ipstatic -lib_map_path [list {modelsim=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/modelsim} {questa=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/questa} {riviera=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/riviera} {activehdl=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
set_property -dict [list CONFIG.C_Mult_Usage {No_Usage} CONFIG.C_Latency {12}] [get_ips double_sub]
generate_target all [get_files  D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/double_sub/double_sub.xci]
catch { config_ip_cache -export [get_ips -all double_sub] }
export_ip_user_files -of_objects [get_files D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/double_sub/double_sub.xci] -no_script -sync -force -quiet
reset_run double_sub_synth_1
launch_runs double_sub_synth_1 -jobs 16
wait_on_run double_sub_synth_1
wait_on_run double_sub_synth_1
export_simulation -of_objects [get_files D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/double_sub/double_sub.xci] -directory D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.ip_user_files/sim_scripts -ip_user_files_dir D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.ip_user_files -ipstatic_source_dir D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.ip_user_files/ipstatic -lib_map_path [list {modelsim=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/modelsim} {questa=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/questa} {riviera=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/riviera} {activehdl=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
reset_run synth_1
launch_runs impl_1 -jobs 16
wait_on_run impl_1
open_run impl_1
close_design
open_run synth_1 -name synth_1
close_design
reset_run synth_1
launch_runs impl_1 -jobs 16
wait_on_run impl_1
open_run impl_1
close_design
open_run impl_1
close_design
reset_run synth_1
launch_runs impl_1 -jobs 16
wait_on_run impl_1
open_run impl_1
open_run synth_1 -name synth_1
close_design
close_design
create_ip -name clk_wiz -vendor xilinx.com -library ip -version 6.0 -module_name clk_400
set_property -dict [list CONFIG.Component_Name {clk_400} CONFIG.CLK_IN1_BOARD_INTERFACE {sys_clock} CONFIG.CLK_IN2_BOARD_INTERFACE {Custom} CONFIG.RESET_BOARD_INTERFACE {Custom} CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {400} CONFIG.MMCM_CLKOUT0_DIVIDE_F {2.500} CONFIG.CLKOUT1_JITTER {101.114}] [get_ips clk_400]
generate_target {instantiation_template} [get_files d:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/clk_400/clk_400.xci]
generate_target all [get_files  d:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/clk_400/clk_400.xci]
catch { config_ip_cache -export [get_ips -all clk_400] }
export_ip_user_files -of_objects [get_files d:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/clk_400/clk_400.xci] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] d:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/clk_400/clk_400.xci]
launch_runs clk_400_synth_1 -jobs 16
wait_on_run clk_400_synth_1
wait_on_run clk_400_synth_1
export_simulation -of_objects [get_files d:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/clk_400/clk_400.xci] -directory D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.ip_user_files/sim_scripts -ip_user_files_dir D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.ip_user_files -ipstatic_source_dir D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.ip_user_files/ipstatic -lib_map_path [list {modelsim=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/modelsim} {questa=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/questa} {riviera=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/riviera} {activehdl=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
reset_run synth_1
launch_runs impl_1 -jobs 16
wait_on_run impl_1
open_run impl_1
open_run synth_1 -name synth_1
show_objects -name NET_ONLY [get_nets -hierarchical -top_net_of_hierarchical_group "*v_reg*" ]
show_objects -name NET_ONLY [get_nets -hierarchical -top_net_of_hierarchical_group "*led*" ]
create_debug_core u_ila_0 ila
set_property C_DATA_DEPTH 1024 [get_debug_cores u_ila_0]
set_property C_TRIGIN_EN false [get_debug_cores u_ila_0]
set_property C_TRIGOUT_EN false [get_debug_cores u_ila_0]
set_property C_ADV_TRIGGER false [get_debug_cores u_ila_0]
set_property C_INPUT_PIPE_STAGES 0 [get_debug_cores u_ila_0]
set_property C_EN_STRG_QUAL false [get_debug_cores u_ila_0]
set_property ALL_PROBE_SAME_MU true [get_debug_cores u_ila_0]
set_property ALL_PROBE_SAME_MU_CNT 1 [get_debug_cores u_ila_0]
connect_debug_port u_ila_0/clk [get_nets [list inst_clk_400/inst/clk_out1 ]]
set_property port_width 4 [get_debug_ports u_ila_0/probe0]
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe0]
connect_debug_port u_ila_0/probe0 [get_nets [list {led_OBUF[0]} {led_OBUF[1]} {led_OBUF[2]} {led_OBUF[3]} ]]
create_debug_port u_ila_0 probe
set_property port_width 64 [get_debug_ports u_ila_0/probe1]
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe1]
connect_debug_port u_ila_0/probe1 [get_nets [list {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][0]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][1]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][2]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][3]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][4]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][5]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][6]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][7]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][8]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][9]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][10]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][11]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][12]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][13]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][14]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][15]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][16]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][17]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][18]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][19]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][20]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][21]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][22]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][23]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][24]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][25]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][26]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][27]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][28]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][29]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][30]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][31]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][32]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][33]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][34]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][35]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][36]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][37]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][38]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][39]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][40]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][41]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][42]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][43]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][44]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][45]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][46]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][47]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][48]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][49]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][50]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][51]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][52]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][53]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][54]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][55]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][56]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][57]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][58]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][59]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][60]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][61]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][62]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[1][63]} ]]
create_debug_port u_ila_0 probe
set_property port_width 64 [get_debug_ports u_ila_0/probe2]
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe2]
connect_debug_port u_ila_0/probe2 [get_nets [list {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][0]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][1]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][2]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][3]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][4]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][5]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][6]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][7]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][8]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][9]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][10]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][11]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][12]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][13]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][14]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][15]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][16]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][17]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][18]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][19]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][20]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][21]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][22]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][23]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][24]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][25]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][26]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][27]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][28]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][29]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][30]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][31]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][32]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][33]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][34]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][35]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][36]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][37]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][38]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][39]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][40]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][41]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][42]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][43]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][44]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][45]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][46]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][47]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][48]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][49]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][50]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][51]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][52]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][53]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][54]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][55]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][56]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][57]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][58]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][59]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][60]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][61]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][62]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[2][63]} ]]
create_debug_port u_ila_0 probe
set_property port_width 64 [get_debug_ports u_ila_0/probe3]
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe3]
connect_debug_port u_ila_0/probe3 [get_nets [list {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][0]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][1]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][2]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][3]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][4]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][5]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][6]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][7]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][8]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][9]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][10]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][11]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][12]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][13]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][14]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][15]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][16]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][17]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][18]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][19]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][20]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][21]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][22]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][23]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][24]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][25]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][26]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][27]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][28]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][29]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][30]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][31]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][32]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][33]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][34]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][35]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][36]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][37]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][38]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][39]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][40]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][41]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][42]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][43]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][44]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][45]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][46]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][47]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][48]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][49]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][50]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][51]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][52]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][53]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][54]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][55]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][56]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][57]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][58]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][59]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][60]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][61]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][62]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[3][63]} ]]
create_debug_port u_ila_0 probe
set_property port_width 64 [get_debug_ports u_ila_0/probe4]
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe4]
connect_debug_port u_ila_0/probe4 [get_nets [list {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][0]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][1]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][2]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][3]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][4]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][5]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][6]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][7]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][8]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][9]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][10]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][11]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][12]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][13]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][14]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][15]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][16]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][17]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][18]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][19]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][20]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][21]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][22]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][23]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][24]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][25]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][26]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][27]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][28]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][29]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][30]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][31]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][32]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][33]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][34]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][35]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][36]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][37]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][38]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][39]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][40]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][41]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][42]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][43]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][44]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][45]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][46]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][47]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][48]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][49]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][50]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][51]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][52]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][53]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][54]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][55]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][56]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][57]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][58]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][59]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][60]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][61]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][62]} {u_Izhikevich_model_pipeline_multiple/v_reg_reg[0][63]} ]]
save_constraints
close_design
close_design
reset_run impl_1
launch_runs impl_1 -to_step write_bitstream -jobs 16
wait_on_run impl_1
open_hw_manager
connect_hw_server -allow_non_jtag
open_hw_target
set_property PROGRAM.FILE {D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.runs/impl_1/DG_granule_model.bit} [get_hw_devices xc7a35t_0]
set_property PROBES.FILE {D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.runs/impl_1/DG_granule_model.ltx} [get_hw_devices xc7a35t_0]
set_property FULL_PROBES.FILE {D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.runs/impl_1/DG_granule_model.ltx} [get_hw_devices xc7a35t_0]
current_hw_device [get_hw_devices xc7a35t_0]
refresh_hw_device [lindex [get_hw_devices xc7a35t_0] 0]
set_property PROBES.FILE {D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.runs/impl_1/DG_granule_model.ltx} [get_hw_devices xc7a35t_0]
set_property FULL_PROBES.FILE {D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.runs/impl_1/DG_granule_model.ltx} [get_hw_devices xc7a35t_0]
set_property PROGRAM.FILE {D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.runs/impl_1/DG_granule_model.bit} [get_hw_devices xc7a35t_0]
program_hw_devices [get_hw_devices xc7a35t_0]
refresh_hw_device [lindex [get_hw_devices xc7a35t_0] 0]
refresh_hw_device [lindex [get_hw_devices xc7a35t_0] 0]
set_property PROBES.FILE {D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.runs/impl_1/DG_granule_model.ltx} [get_hw_devices xc7a35t_0]
set_property FULL_PROBES.FILE {D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.runs/impl_1/DG_granule_model.ltx} [get_hw_devices xc7a35t_0]
set_property PROGRAM.FILE {D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.runs/impl_1/DG_granule_model.bit} [get_hw_devices xc7a35t_0]
program_hw_devices [get_hw_devices xc7a35t_0]
refresh_hw_device [lindex [get_hw_devices xc7a35t_0] 0]
set_property PROBES.FILE {} [get_hw_devices xc7a35t_0]
set_property FULL_PROBES.FILE {} [get_hw_devices xc7a35t_0]
set_property PROGRAM.FILE {D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.runs/impl_1/DG_granule_model.bit} [get_hw_devices xc7a35t_0]
program_hw_devices [get_hw_devices xc7a35t_0]
refresh_hw_device [lindex [get_hw_devices xc7a35t_0] 0]
close_hw_manager
open_run synth_1 -name synth_1
delete_debug_core [get_debug_cores {u_ila_0 }]
save_constraints
close_design
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 16
wait_on_run impl_1
open_hw_manager
connect_hw_server -allow_non_jtag
open_hw_target
set_property PROGRAM.FILE {D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.runs/impl_1/DG_granule_model.bit} [get_hw_devices xc7a35t_0]
current_hw_device [get_hw_devices xc7a35t_0]
refresh_hw_device -update_hw_probes false [lindex [get_hw_devices xc7a35t_0] 0]
set_property PROBES.FILE {} [get_hw_devices xc7a35t_0]
set_property FULL_PROBES.FILE {} [get_hw_devices xc7a35t_0]
set_property PROGRAM.FILE {D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.runs/impl_1/DG_granule_model.bit} [get_hw_devices xc7a35t_0]
program_hw_devices [get_hw_devices xc7a35t_0]
refresh_hw_device [lindex [get_hw_devices xc7a35t_0] 0]
close_hw_manager
update_compile_order -fileset sources_1
update_compile_order -fileset sources_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 16
wait_on_run impl_1
open_hw_manager
connect_hw_server -allow_non_jtag
open_hw_target
set_property PROGRAM.FILE {D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.runs/impl_1/DG_granule_model.bit} [get_hw_devices xc7a35t_0]
current_hw_device [get_hw_devices xc7a35t_0]
refresh_hw_device -update_hw_probes false [lindex [get_hw_devices xc7a35t_0] 0]
set_property PROBES.FILE {} [get_hw_devices xc7a35t_0]
set_property FULL_PROBES.FILE {} [get_hw_devices xc7a35t_0]
set_property PROGRAM.FILE {D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.runs/impl_1/DG_granule_model.bit} [get_hw_devices xc7a35t_0]
program_hw_devices [get_hw_devices xc7a35t_0]
refresh_hw_device [lindex [get_hw_devices xc7a35t_0] 0]
close_hw_manager
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 16
wait_on_run impl_1
open_hw_manager
connect_hw_server -allow_non_jtag
open_hw_target
set_property PROGRAM.FILE {D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.runs/impl_1/DG_granule_model.bit} [get_hw_devices xc7a35t_0]
current_hw_device [get_hw_devices xc7a35t_0]
refresh_hw_device -update_hw_probes false [lindex [get_hw_devices xc7a35t_0] 0]
set_property PROBES.FILE {} [get_hw_devices xc7a35t_0]
set_property FULL_PROBES.FILE {} [get_hw_devices xc7a35t_0]
set_property PROGRAM.FILE {D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.runs/impl_1/DG_granule_model.bit} [get_hw_devices xc7a35t_0]
program_hw_devices [get_hw_devices xc7a35t_0]
refresh_hw_device [lindex [get_hw_devices xc7a35t_0] 0]
close_hw_manager
reset_run synth_1
launch_runs synth_1 -jobs 16
wait_on_run synth_1
set_property -dict [list CONFIG.C_Latency {0}] [get_ips double_add]
generate_target all [get_files  D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/double_add/double_add.xci]
catch { config_ip_cache -export [get_ips -all double_add] }
export_ip_user_files -of_objects [get_files D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/double_add/double_add.xci] -no_script -sync -force -quiet
reset_run double_add_synth_1
launch_runs double_add_synth_1 -jobs 16
wait_on_run double_add_synth_1
wait_on_run double_add_synth_1
export_simulation -of_objects [get_files D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/double_add/double_add.xci] -directory D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.ip_user_files/sim_scripts -ip_user_files_dir D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.ip_user_files -ipstatic_source_dir D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.ip_user_files/ipstatic -lib_map_path [list {modelsim=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/modelsim} {questa=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/questa} {riviera=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/riviera} {activehdl=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
set_property -dict [list CONFIG.C_Latency {0}] [get_ips double_sub]
generate_target all [get_files  D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/double_sub/double_sub.xci]
catch { config_ip_cache -export [get_ips -all double_sub] }
export_ip_user_files -of_objects [get_files D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/double_sub/double_sub.xci] -no_script -sync -force -quiet
reset_run double_sub_synth_1
launch_runs double_sub_synth_1 -jobs 16
wait_on_run double_sub_synth_1
wait_on_run double_sub_synth_1
export_simulation -of_objects [get_files D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.srcs/sources_1/ip/double_sub/double_sub.xci] -directory D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.ip_user_files/sim_scripts -ip_user_files_dir D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.ip_user_files -ipstatic_source_dir D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.ip_user_files/ipstatic -lib_map_path [list {modelsim=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/modelsim} {questa=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/questa} {riviera=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/riviera} {activehdl=D:/ADAM_LAB/IZ_Neuron_FPGA/FPGA_Implementation/DG_granule_model/DG_granule_model.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
reset_run synth_1
launch_runs synth_1 -jobs 16
wait_on_run synth_1
open_run synth_1 -name synth_1
synth_design -rtl -rtl_skip_mlo -name rtl_1
